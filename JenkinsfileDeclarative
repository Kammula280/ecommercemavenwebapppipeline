pipeline{
    agent{
        label 'master'
    }
    environment{
    BRANCH_NAME ="${params.branch}"
    }
    parameters{
    string (name : 'version',defaultValue: '1.0', description : '')
    choice (name:'branch', choices: ['dev','master','test'],description: '')
    }
 options{
         timestamps()
         timeout(time:60,unit:'MINUTES')
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))
        disableConcurrentBuilds()
     }
     triggers{
      pollSCM('* * * * *')}
    tools{
        maven 'maven3.6.3'
    }
    
   
    stages{
        stage ('displayenvsand checkout'){
        steps{
        parallel(
        "displayenv":
        {
        echo "my env var ${BRANCH_NAME}"},
        "Checkout code and job details":{
                git branch: 'dev', credentialsId: 'githubcred', url: 'https://github.com/Kammula280/ecommercemavenwebapppipeline.git'}
           )
           }
        }
     
        stage('Build and test'){
            steps{
                sh 'mvn clean package'
            }
        }
        stage ('Execute Sonarqube report'){
            steps{
                sh 'mvn sonar:sonar'
            }
            }
        stage('upload artifact'){
            steps {
                sh 'mvn deploy'
            }
            }
        stage ('Deploy to APP server'){
            steps{
                sshagent(['d20ea64a-8685-4263-a0ac-28c646ec6f51']) {
                    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@18.116.33.206:/opt/apache-tomcat-9.0.45/webapps"
                    }
            }
        }
    }
        post{
        always{
                mail bcc: '', body: 'Your Jenkins Build is always', cc: '', from: '', replyTo: '', subject: 'Build is Success', to: 'kammularamgopal@gmail.com'
            cleanWs()
            }
            success{
                mail bcc: '', body: 'Your Jenkins Build is Success', cc: '', from: '', replyTo: '', subject: 'Build is Success', to: 'kammularamgopal@gmail.com'
            cleanWs()
            }
            failure{
                mail bcc: '', body: 'Your Jenkins Build is Failed', cc: '', from: '', replyTo: '', subject: 'Build is Failed', to: 'kammularamgopal@gmail.com'
            cleanWs()
            }
        }
       
               
}
